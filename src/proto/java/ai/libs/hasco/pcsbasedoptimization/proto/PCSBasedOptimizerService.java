// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PCSBasedComponentParameter.proto

package ai.libs.hasco.pcsbasedoptimization.proto;

/**
 * Protobuf service {@code pcsbasedoptimization.PCSBasedOptimizerService}
 */
public abstract class PCSBasedOptimizerService implements com.google.protobuf.Service {
	protected PCSBasedOptimizerService() {
	}

	public interface Interface {
		/**
		 * <code>rpc Evaluate(.pcsbasedoptimization.PCSBasedComponentProto) returns (.pcsbasedoptimization.PCSBasedEvaluationResponseProto);</code>
		 */
		public abstract void evaluate(com.google.protobuf.RpcController controller, ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedComponentProto request,
				com.google.protobuf.RpcCallback<ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedEvaluationResponseProto> done);

	}

	public static com.google.protobuf.Service newReflectiveService(final Interface impl) {
		return new PCSBasedOptimizerService() {
			@java.lang.Override
			public void evaluate(final com.google.protobuf.RpcController controller, final ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedComponentProto request,
					com.google.protobuf.RpcCallback<ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedEvaluationResponseProto> done) {
				impl.evaluate(controller, request, done);
			}

		};
	}

	public static com.google.protobuf.BlockingService newReflectiveBlockingService(final BlockingInterface impl) {
		return new com.google.protobuf.BlockingService() {
			public final com.google.protobuf.Descriptors.ServiceDescriptor getDescriptorForType() {
				return getDescriptor();
			}

			public final com.google.protobuf.Message callBlockingMethod(final com.google.protobuf.Descriptors.MethodDescriptor method, final com.google.protobuf.RpcController controller, final com.google.protobuf.Message request)
					throws com.google.protobuf.ServiceException {
				if (method.getService() != getDescriptor()) {
					throw new java.lang.IllegalArgumentException("Service.callBlockingMethod() given method descriptor for " + "wrong service type.");
				}
				switch (method.getIndex()) {
				case 0:
					return impl.evaluate(controller, (ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedComponentProto) request);
				default:
					throw new java.lang.AssertionError("Can't get here.");
				}
			}

			public final com.google.protobuf.Message getRequestPrototype(final com.google.protobuf.Descriptors.MethodDescriptor method) {
				if (method.getService() != getDescriptor()) {
					throw new java.lang.IllegalArgumentException("Service.getRequestPrototype() given method " + "descriptor for wrong service type.");
				}
				switch (method.getIndex()) {
				case 0:
					return ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedComponentProto.getDefaultInstance();
				default:
					throw new java.lang.AssertionError("Can't get here.");
				}
			}

			public final com.google.protobuf.Message getResponsePrototype(final com.google.protobuf.Descriptors.MethodDescriptor method) {
				if (method.getService() != getDescriptor()) {
					throw new java.lang.IllegalArgumentException("Service.getResponsePrototype() given method " + "descriptor for wrong service type.");
				}
				switch (method.getIndex()) {
				case 0:
					return ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedEvaluationResponseProto.getDefaultInstance();
				default:
					throw new java.lang.AssertionError("Can't get here.");
				}
			}

		};
	}

	/**
	 * <code>rpc Evaluate(.pcsbasedoptimization.PCSBasedComponentProto) returns (.pcsbasedoptimization.PCSBasedEvaluationResponseProto);</code>
	 */
	public abstract void evaluate(com.google.protobuf.RpcController controller, ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedComponentProto request,
			com.google.protobuf.RpcCallback<ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedEvaluationResponseProto> done);

	public static final com.google.protobuf.Descriptors.ServiceDescriptor getDescriptor() {
		return ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedComponentParameter.getDescriptor().getServices().get(0);
	}

	public final com.google.protobuf.Descriptors.ServiceDescriptor getDescriptorForType() {
		return getDescriptor();
	}

	public final void callMethod(final com.google.protobuf.Descriptors.MethodDescriptor method, final com.google.protobuf.RpcController controller, final com.google.protobuf.Message request,
			com.google.protobuf.RpcCallback<com.google.protobuf.Message> done) {
		if (method.getService() != getDescriptor()) {
			throw new java.lang.IllegalArgumentException("Service.callMethod() given method descriptor for wrong " + "service type.");
		}
		switch (method.getIndex()) {
		case 0:
			this.evaluate(controller, (ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedComponentProto) request,
					com.google.protobuf.RpcUtil.<ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedEvaluationResponseProto>specializeCallback(done));
			return;
		default:
			throw new java.lang.AssertionError("Can't get here.");
		}
	}

	public final com.google.protobuf.Message getRequestPrototype(final com.google.protobuf.Descriptors.MethodDescriptor method) {
		if (method.getService() != getDescriptor()) {
			throw new java.lang.IllegalArgumentException("Service.getRequestPrototype() given method " + "descriptor for wrong service type.");
		}
		switch (method.getIndex()) {
		case 0:
			return ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedComponentProto.getDefaultInstance();
		default:
			throw new java.lang.AssertionError("Can't get here.");
		}
	}

	public final com.google.protobuf.Message getResponsePrototype(final com.google.protobuf.Descriptors.MethodDescriptor method) {
		if (method.getService() != getDescriptor()) {
			throw new java.lang.IllegalArgumentException("Service.getResponsePrototype() given method " + "descriptor for wrong service type.");
		}
		switch (method.getIndex()) {
		case 0:
			return ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedEvaluationResponseProto.getDefaultInstance();
		default:
			throw new java.lang.AssertionError("Can't get here.");
		}
	}

	public static Stub newStub(final com.google.protobuf.RpcChannel channel) {
		return new Stub(channel);
	}

	public static final class Stub extends ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedOptimizerService implements Interface {
		private Stub(final com.google.protobuf.RpcChannel channel) {
			this.channel = channel;
		}

		private final com.google.protobuf.RpcChannel channel;

		public com.google.protobuf.RpcChannel getChannel() {
			return this.channel;
		}

		public void evaluate(final com.google.protobuf.RpcController controller, final ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedComponentProto request,
				com.google.protobuf.RpcCallback<ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedEvaluationResponseProto> done) {
			this.channel.callMethod(getDescriptor().getMethods().get(0), controller, request, ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedEvaluationResponseProto.getDefaultInstance(), com.google.protobuf.RpcUtil
					.generalizeCallback(done, ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedEvaluationResponseProto.class, ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedEvaluationResponseProto.getDefaultInstance()));
		}
	}

	public static BlockingInterface newBlockingStub(final com.google.protobuf.BlockingRpcChannel channel) {
		return new BlockingStub(channel);
	}

	public interface BlockingInterface {
		public ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedEvaluationResponseProto evaluate(com.google.protobuf.RpcController controller, ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedComponentProto request)
				throws com.google.protobuf.ServiceException;
	}

	private static final class BlockingStub implements BlockingInterface {
		private BlockingStub(final com.google.protobuf.BlockingRpcChannel channel) {
			this.channel = channel;
		}

		private final com.google.protobuf.BlockingRpcChannel channel;

		public ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedEvaluationResponseProto evaluate(final com.google.protobuf.RpcController controller, final ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedComponentProto request)
				throws com.google.protobuf.ServiceException {
			return (ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedEvaluationResponseProto) this.channel.callBlockingMethod(getDescriptor().getMethods().get(0), controller, request,
					ai.libs.hasco.pcsbasedoptimization.proto.PCSBasedEvaluationResponseProto.getDefaultInstance());
		}

	}

	// @@protoc_insertion_point(class_scope:pcsbasedoptimization.PCSBasedOptimizerService)
}
